OPTIONS /*path                        com.assessory.play.controllers.Application.options(path)

# Task Output
GET     /taskoutput/:toId                           com.assessory.play.controllers.TaskOutputController.get(toId)
POST    /taskoutput/:toId                           com.assessory.play.controllers.TaskOutputController.updateBody(toId)
POST    /task/:taskId/newOutput                     com.assessory.play.controllers.TaskOutputController.create(taskId)
GET     /task/:taskId/outputsAsCsv                  com.assessory.play.controllers.TaskOutputController.asCsv(taskId)
GET     /task/:taskId/myOutputs                     com.assessory.play.controllers.TaskOutputController.myOutputs(taskId)
GET     /task/:taskId/relevantToMe                  com.assessory.play.controllers.TaskOutputController.relevantToMe(taskId)

# Group Crits
GET     /groupcrit/:taskId/allocations/csv          com.assessory.play.controllers.GroupCritController.allocationsAsCSV(taskId)
GET     /groupcrit/:taskId/myAllocations            com.assessory.play.controllers.GroupCritController.myAllocation(taskId)
GET     /groupcrit/:taskId/allocations              com.assessory.play.controllers.GroupCritController.allocations(taskId)
POST    /groupcrit/:taskId/allocate                 com.assessory.play.controllers.GroupCritController.allocateTask(taskId)
POST    /groupcritalloc/:allocId/createCritFor/:groupId                 com.assessory.play.controllers.GroupCritController.createCritFor(allocId, groupId)

# Tasks
GET     /task/:id                              com.assessory.play.controllers.TaskController.get(id)
POST    /course/:courseId/task/create          com.assessory.play.controllers.TaskController.create(courseId)
GET     /course/:courseId/tasks                com.assessory.play.controllers.TaskController.courseTasks(courseId)
POST    /task/:id/body                         com.assessory.play.controllers.TaskController.updateBody(id)

# Users
POST    /user/findMany                        com.assessory.play.controllers.UserController.findMany

# Groups
GET     /course/:courseId/group/my            com.assessory.play.controllers.GroupController.myGroups(courseId)
POST    /groupSet/:gsId/groups                com.assessory.play.controllers.GroupController.groupSetGroups(gsId)
POST    /group/findMany                        com.assessory.play.controllers.GroupController.findMany
GET     /group/:id                       com.assessory.play.controllers.GroupController.group(id)

# Group Preenrols
POST    /groupSet/:gsId/createGPreenrol       com.assessory.play.controllers.GroupController.createGroupSetPreenrol(gsId)   

# Preenrols
GET     /course/:courseId/preenrols           com.assessory.play.controllers.CourseController.coursePreenrols(courseId)
GET     /preenrol/:gsId                       com.assessory.play.controllers.CourseController.preenrol(gsId)
POST    /course/:courseId/createPreenrol      com.assessory.play.controllers.CourseController.createPreenrol(courseId)

# GroupSets
GET     /course/:courseId/groupSets           com.assessory.play.controllers.GroupController.courseGroupSets(courseId)
GET     /groupSet/:gsId                       com.assessory.play.controllers.GroupController.groupSet(gsId)
POST    /groupSet/:gsId                       com.assessory.play.controllers.GroupController.editGroupSet(gsId)
POST    /course/:courseId/createGroupSet      com.assessory.play.controllers.GroupController.createGroupSet(courseId)

# Courses
POST    /course/my                  com.assessory.play.controllers.CourseController.myCourses
GET     /course/:id                 com.assessory.play.controllers.CourseController.get(id)
POST    /course/create              com.assessory.play.controllers.CourseController.create
POST    /course/findMany            com.assessory.play.controllers.CourseController.findMany

# Logged in user
POST	/self						com.assessory.play.controllers.UserController.self

POST	/signUp						com.assessory.play.controllers.UserController.signUp
POST	/logIn 						com.assessory.play.controllers.UserController.logIn
POST	/logOut						com.assessory.play.controllers.UserController.logOut

# Auth
->      /oauth                      handyplayoauth.Routes
POST    /auth/interstitial/register com.assessory.auth.controllers.InterstitialController.registerUser
POST    /auth/interstitial/add      com.assessory.auth.controllers.InterstitialController.addIdentity

# Index
GET     /                           com.assessory.play.controllers.Application.index

# Test error conditions
GET     /notFound                   com.assessory.play.controllers.Application.notFound
GET     /userError                  com.assessory.play.controllers.Application.userError

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Default route
#GET     /*path                      com.assessory.play.controllers.Application.defaultRoute(path)